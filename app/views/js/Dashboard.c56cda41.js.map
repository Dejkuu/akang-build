{"version":3,"file":"js/Dashboard.c56cda41.js","mappings":"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","sources":["webpack://akang/./src/components/Dashboard/MainNavigation.vue","webpack://akang/./src/components/Dashboard/MainNavigation.vue?5e55","webpack://akang/./src/components/Dashboard/StatisticBlock.vue","webpack://akang/./src/components/Dashboard/StatisticBlock.vue?688d","webpack://akang/./src/views/DashboardView.vue","webpack://akang/./src/views/DashboardView.vue?7280"],"sourcesContent":["<template>\r\n  <nav id=\"navigation\">\r\n    <router-link to=\"/\">\r\n      <svg-icon\r\n        type=\"mdi\"\r\n        :path=\"iconsStore.mdiHomeOutline\"\r\n      ></svg-icon>\r\n    </router-link>\r\n    <hr />\r\n    <router-link to=\"/dashboard\">\r\n      <svg-icon\r\n        type=\"mdi\"\r\n        :path=\"iconsStore.mdiViewDashboardOutline\"\r\n      ></svg-icon>\r\n    </router-link>\r\n    <hr />\r\n    <router-link to=\"/dashboard/uzytkownicy\">\r\n      <svg-icon\r\n        type=\"mdi\"\r\n        :path=\"iconsStore.mdiAccountMultipleOutline\"\r\n      ></svg-icon>\r\n    </router-link>\r\n    <hr />\r\n    <router-link to=\"/dashboard/linki\">\r\n      <svg-icon\r\n        type=\"mdi\"\r\n        :path=\"iconsStore.mdiLinkVariant\"\r\n      ></svg-icon>\r\n    </router-link>\r\n    <hr />\r\n    <router-link to=\"/dashboard/zadania\">\r\n      <svg-icon\r\n        type=\"mdi\"\r\n        :path=\"iconsStore.mdiCalendarMonthOutline\"\r\n      ></svg-icon>\r\n    </router-link>\r\n  </nav>\r\n</template>\r\n\r\n<script>\r\nimport svgIcon from \"@jamescoyle/vue-icon\";\r\n\r\nimport { useIconsStore } from \"../../stores/iconsStore\";\r\n\r\nexport default {\r\n  name: \"MainNavigation\",\r\n  components: {\r\n    svgIcon,\r\n  },\r\n  setup() {\r\n    const iconsStore = useIconsStore();\r\n\r\n    return { iconsStore };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#navigation {\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-flow: row nowrap;\r\n  padding: 0 10px;\r\n  width: fit-content;\r\n  height: 50px;\r\n  background-color: #272727;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 4px rgb(0 0 0 / 25%);\r\n  transition: 0.2s ease-in-out;\r\n\r\n  a {\r\n    width: 24px;\r\n    height: 24px;\r\n    transition: 0.1s ease-in-out;\r\n\r\n    &:hover {\r\n      color: #77839C;\r\n    }\r\n  }\r\n\r\n  hr {\r\n    width: 1px;\r\n    height: 20px;\r\n    border: none;\r\n    background-color: #43444a;\r\n    margin: auto 10px;\r\n  }\r\n}\r\n</style>","import { render } from \"./MainNavigation.vue?vue&type=template&id=19900eb5&scoped=true\"\nimport script from \"./MainNavigation.vue?vue&type=script&lang=js\"\nexport * from \"./MainNavigation.vue?vue&type=script&lang=js\"\n\nimport \"./MainNavigation.vue?vue&type=style&index=0&id=19900eb5&lang=scss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\Dejku\\\\Desktop\\\\Stronka\\\\akang\\\\client\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-19900eb5\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"block\">\r\n    <svg-icon class=\"blockIcon\" type=\"mdi\" :path=\"blockIcon\"></svg-icon>\r\n    <div class=\"blockText\">\r\n      <h1>{{ blockTitle }}</h1>\r\n      <span>{{ blockDesc }}</span>\r\n    </div>\r\n    <router-link :to=\"`/dashboard/${blockLink}`\" v-if=\"hasLink\">\r\n      <svg-icon type=\"mdi\" :path=\"iconsStore.mdiOpenInNew\"></svg-icon>\r\n    </router-link>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport svgIcon from \"@jamescoyle/vue-icon\";\r\n\r\nimport { useIconsStore } from \"../../stores/iconsStore\";\r\nimport { useGeneralStore } from \"../../stores/generalStore\";\r\n\r\nexport default {\r\n  name: \"StatisticsBlock\",\r\n  props: [\"type\", \"hasLink\"],\r\n  components: {\r\n    svgIcon,\r\n  },\r\n  setup() {\r\n    const iconsStore = useIconsStore();\r\n    const generalStore = useGeneralStore();\r\n\r\n    return { generalStore, iconsStore };\r\n  },\r\n  data() {\r\n    return {\r\n      blockIcon: \"\",\r\n      blockTitle: \"\",\r\n      blockDesc: \"\",\r\n      blockLink: \"\",\r\n    };\r\n  },\r\n  async beforeMount() {\r\n    await this.generalStore.getStatistics();\r\n\r\n    if (this.type === \"users\") {\r\n      this.blockIcon = this.iconsStore.mdiAccountMultipleOutline;\r\n      this.blockTitle = \"Użytkownicy\";\r\n      this.blockDesc = this.generalStore.statistics.users;\r\n      this.blockLink = \"uzytkownicy\";\r\n    } else if (this.type === \"videos\") {\r\n      this.blockIcon = this.iconsStore.mdiMovieOutline;\r\n      this.blockTitle = \"Odebrane filmy\";\r\n      this.blockDesc = this.generalStore.statistics.links;\r\n      this.blockLink = \"linki\";\r\n    } else if (this.type === \"tasks\") {\r\n      this.blockIcon = this.iconsStore.mdiCalendarMonthOutline;\r\n      this.blockTitle = \"Do zrobienia\";\r\n      this.blockDesc = this.generalStore.statistics.tasks;\r\n      this.blockLink = \"zadania\";\r\n    } else {\r\n      this.blockIcon = this.iconsStore.alertOctagonIcon;\r\n      this.blockTitle = \"Nieznany typ\";\r\n      this.blockDesc = NaN;\r\n      this.blockLink = \"NotFound\";\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.block {\r\n  position: relative;\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 300px;\r\n  height: 100px;\r\n  padding: 10px 0;\r\n  border-radius: 15px;\r\n  background: linear-gradient(to bottom right, #20232a, #1a1c23);\r\n  box-shadow: 0 4px 4px #181920;\r\n\r\n  .blockIcon {\r\n    width: 30%;\r\n    height: 40px;\r\n  }\r\n\r\n  .blockText {\r\n    width: 70%;\r\n    height: 80%;\r\n    margin: auto;\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    text-align: start;\r\n\r\n    h1 {\r\n      margin: 5px 0;\r\n      font-size: 20px;\r\n      background: linear-gradient(\r\n        to bottom right,\r\n        rgb(102, 102, 102),\r\n        rgba(102, 102, 102, 0)\r\n      );\r\n      background-clip: text;\r\n      -webkit-background-clip: text;\r\n      -webkit-text-fill-color: transparent;\r\n    }\r\n\r\n    span {\r\n      font-size: 24px;\r\n    }\r\n  }\r\n\r\n  a {\r\n    position: absolute;\r\n    top: 20px;\r\n    right: 20px;\r\n    color: #666;\r\n\r\n    &:hover {\r\n      color: #999;\r\n    }\r\n  }\r\n}\r\n</style>","import { render } from \"./StatisticBlock.vue?vue&type=template&id=fb2d4022&scoped=true\"\nimport script from \"./StatisticBlock.vue?vue&type=script&lang=js\"\nexport * from \"./StatisticBlock.vue?vue&type=script&lang=js\"\n\nimport \"./StatisticBlock.vue?vue&type=style&index=0&id=fb2d4022&lang=scss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\Dejku\\\\Desktop\\\\Stronka\\\\akang\\\\client\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fb2d4022\"]])\n\nexport default __exports__","<template>\n  <body>\n    <div id=\"backgroundTriangle\"></div>\n    <HeaderLogo />\n    <Notification />\n    <header id=\"headerLeft\">\n      <Navigation />\n      <UserCard />\n    </header>\n    <main id=\"mainDashboardSection\">\n      <section id=\"dashboardSection\">\n        <div id=\"dashboardSectionContent\">\n          <h1 class=\"titles\">Dashboard</h1>\n          <div id=\"dashboardSectionBlocks\">\n            <StatisticBlock :type=\"'users'\" :hasLink=\"true\" />\n            <StatisticBlock :type=\"'videos'\" :hasLink=\"true\" />\n            <StatisticBlock :type=\"'tasks'\" :hasLink=\"true\" />\n          </div>\n        </div>\n      </section>\n      <section id=\"tasksSection\">\n        <h1 class=\"titles\">To-Do List</h1>\n        <ul id=\"tasksSectionContent\" class=\"sectionContent\">\n          <div v-if=\"tasks.length === 0\" class=\"emptyValuesMessage\">\n            <h1>Brak zadań do wyświetlenia</h1>\n          </div>\n          <router-link\n            class=\"task pointer\"\n            v-for=\"task in tasks.slice(0, 6)\"\n            :key=\"task._id\"\n            :to=\"`/dashboard/zadania/${task._id}`\"\n          >\n            <div class=\"taskDetails\">\n              <span class=\"taskID\">{{ `#${task._id}` }}</span>\n              <div class=\"taskTitleWithImportant\">\n                <h1 class=\"taskTitle\">{{ task.title }}</h1>\n                <span v-if=\"task.important\" class=\"taskImportant\">★</span>\n              </div>\n            </div>\n            <div class=\"statusBadge\" :class=\"task.status\">\n              <div>\n                <p>\n                  {{\n                    task.status === \"finished\"\n                      ? \"Ukończone\"\n                      : task.status === \"cancelled\"\n                      ? \"Anulowane\"\n                      : task.status === \"inProgress\"\n                      ? \"W trakcie\"\n                      : \"Dostępne\"\n                  }}\n                </p>\n              </div>\n            </div>\n          </router-link>\n          <footer>\n            <router-link\n              to=\"/dashboard/zadania\"\n              v-if=\"tasks.length > 6\"\n              class=\"pointer\"\n            >\n              {{ `+${tasks.length - 6} więcej` }}\n            </router-link>\n          </footer>\n        </ul>\n      </section>\n      <section id=\"notificationsSection\">\n        <h1 class=\"titles\">Powiadomienia</h1>\n        <ul id=\"notificationsSectionContent\" class=\"sectionContent\">\n          <li id=\"notificationsHeader\">\n            <h1 class=\"notificationTitle\">Log</h1>\n            <div class=\"notificationStatusContainer\">\n              <h1 class=\"notificationStatus\">Status</h1>\n            </div>\n            <h1 class=\"notificationDate\">Data</h1>\n          </li>\n          <div\n            v-if=\"notifications.length === 0\"\n            style=\"height: 85%\"\n            class=\"emptyValuesMessage\"\n          >\n            <h1>Brak powiadomień</h1>\n          </div>\n          <router-link\n            class=\"notification pointer\"\n            v-for=\"notification in notifications.slice(0, 5)\"\n            :key=\"notification.id\"\n            :to=\"`/dashboard/${notification.routerLink}`\"\n          >\n            <div class=\"notificationTitle\">\n              <h1>\n                {{ `${notification.title}` }}\n                <span>\n                  {{ `${notification.desc}` }}\n                </span>\n              </h1>\n            </div>\n\n            <div class=\"notificationStatusContainer\">\n              <div class=\"notificationStatus\" :class=\"notification.status\">\n                <div>\n                  <p>\n                    {{\n                      notification.status === \"added\"\n                        ? \"Dodane\"\n                        : notification.status === \"error\"\n                        ? \"Błąd\"\n                        : undefined\n                    }}\n                  </p>\n                </div>\n              </div>\n            </div>\n            <div class=\"notificationDate\">\n              {{ convertDate(notification.createdAt) }}\n            </div>\n          </router-link>\n        </ul>\n      </section>\n    </main>\n  </body>\n</template>\n\n<script>\nimport API from \"../api\";\n\nimport HeaderLogo from \"../components/HeaderLogo.vue\";\nimport Notification from \"../components/Assets/Notification.vue\";\nimport UserCard from \"../components/Assets/UserCard.vue\";\nimport Navigation from \"../components/Dashboard/MainNavigation.vue\";\nimport StatisticBlock from \"../components/Dashboard/StatisticBlock.vue\";\n\nexport default {\n  name: \"DashboardView\",\n  components: {\n    HeaderLogo,\n    Notification,\n    UserCard,\n    Navigation,\n    StatisticBlock,\n  },\n  data() {\n    return {\n      tasks: [],\n      notifications: [],\n    };\n  },\n  methods: {\n    convertDate(dateToConvert) {\n      const date = new Date(dateToConvert);\n\n      let dateHours = date.getHours();\n      if (dateHours < 10) dateHours = `0${dateHours}`;\n      let dateMinutes = date.getMinutes();\n      if (dateMinutes < 10) dateMinutes = `0${dateMinutes}`;\n      let dateDay = date.getDate();\n      if (dateDay < 10) dateDay = `0${dateDay}`;\n      let dateMonth = date.getMonth() + 1;\n      if (dateMonth < 10) dateMonth = `0${dateMonth}`;\n      const dateYear = date.getFullYear();\n\n      return `${dateHours}:${dateMinutes} | ${dateDay}.${dateMonth}.${dateYear}`;\n    },\n  },\n  async beforeMount() {\n    this.tasks = await API.getAllTasks();\n    this.notifications = await API.getAllNotifications();\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\nbody {\n  background-color: #20222a;\n\n  #mainDashboardSection {\n    position: absolute;\n    bottom: 0;\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: space-evenly;\n    width: 100%;\n    height: 75%;\n\n    #dashboardSection {\n      width: 100%;\n\n      #dashboardSectionContent {\n        width: 80%;\n        margin: auto;\n\n        #dashboardSectionBlocks {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          flex-flow: row wrap;\n        }\n      }\n    }\n\n    .sectionContent {\n      position: relative;\n      margin: 0;\n      padding: 20px 25px;\n      border-radius: 15px;\n      background: linear-gradient(to bottom right, #20232a, #1a1c23);\n      box-shadow: 0 4px 4px #181920;\n\n      .task,\n      .notification,\n      #notificationsHeader {\n        display: flex;\n        flex-flow: row nowrap;\n        justify-content: space-between;\n        align-items: center;\n        height: 43px;\n        margin-bottom: 15px;\n        padding: 0 15px;\n        border-bottom: 1px solid #363b46;\n      }\n    }\n\n    #tasksSection {\n      #tasksSectionContent {\n        width: 500px;\n        height: 400px;\n\n        .task {\n          &:hover {\n            background-color: #26282f;\n          }\n\n          .taskDetails {\n            display: flex;\n            flex-flow: column nowrap;\n\n            .taskID {\n              width: 100px;\n              margin-left: 5px;\n              font-size: 14px;\n              color: #525866;\n              text-align: start;\n            }\n\n            .taskTitleWithImportant {\n              display: flex;\n              flex-flow: row nowrap;\n\n              .taskTitle {\n                font-size: 20px;\n                margin: 0;\n              }\n\n              .taskImportant {\n                position: relative;\n                bottom: 5px;\n                left: 2px;\n                color: #dcb364;\n                user-select: none;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    #notificationsSection {\n      #notificationsSectionContent {\n        width: 800px;\n        height: 400px;\n        color: #999999;\n\n        a {\n          color: #999999;\n\n          &:hover {\n            color: #adadad;\n          }\n        }\n\n        h1 {\n          margin: 5px;\n        }\n\n        #notificationsHeader {\n          user-select: none;\n\n          .notificationStatusContainer {\n            font-weight: 900;\n          }\n        }\n\n        .notificationTitle {\n          display: flex;\n          flex-flow: row nowrap;\n          justify-content: flex-start;\n          align-items: center;\n          width: 50%;\n          text-align: start;\n\n          h1 {\n            margin: 0;\n            font-weight: lighter;\n\n            span {\n              font-weight: bold;\n              text-transform: uppercase;\n            }\n          }\n        }\n\n        .notificationStatusContainer,\n        .notificationDate {\n          display: flex;\n          justify-content: center;\n          width: 25%;\n        }\n      }\n    }\n\n    footer {\n      position: absolute;\n      bottom: 15px;\n      left: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n      user-select: none;\n\n      a {\n        color: #43444a !important;\n      }\n\n      a:hover {\n        color: #8f9099 !important;\n      }\n    }\n  }\n}\n</style>","import { render } from \"./DashboardView.vue?vue&type=template&id=a64c1bd0&scoped=true\"\nimport script from \"./DashboardView.vue?vue&type=script&lang=js\"\nexport * from \"./DashboardView.vue?vue&type=script&lang=js\"\n\nimport \"./DashboardView.vue?vue&type=style&index=0&id=a64c1bd0&lang=scss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\Dejku\\\\Desktop\\\\Stronka\\\\akang\\\\client\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-a64c1bd0\"]])\n\nexport default __exports__"],"names":["id","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_router_link","to","_component_svg_icon","type","path","$setup","mdiHomeOutline","_hoisted_2","mdiViewDashboardOutline","_hoisted_3","mdiAccountMultipleOutline","_hoisted_4","mdiLinkVariant","_hoisted_5","mdiCalendarMonthOutline","name","components","svgIcon","setup","iconsStore","useIconsStore","__exports__","render","class","$data","$props","_createBlock","mdiOpenInNew","props","generalStore","useGeneralStore","data","blockIcon","blockTitle","blockDesc","blockLink","async","this","getStatistics","statistics","users","mdiMovieOutline","links","tasks","alertOctagonIcon","NaN","_hoisted_12","style","_hoisted_24","_component_HeaderLogo","_component_Notification","_component_Navigation","_component_UserCard","_hoisted_6","_hoisted_7","_component_StatisticBlock","hasLink","_hoisted_8","_hoisted_9","_hoisted_10","length","_hoisted_11","_Fragment","slice","task","key","_id","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","title","important","_hoisted_18","status","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","notification","routerLink","_hoisted_26","desc","_hoisted_27","undefined","_hoisted_28","$options","createdAt","HeaderLogo","Notification","UserCard","Navigation","StatisticBlock","notifications","methods","convertDate","dateToConvert","date","Date","dateHours","getHours","dateMinutes","getMinutes","dateDay","getDate","dateMonth","getMonth","dateYear","getFullYear","API"],"sourceRoot":""}